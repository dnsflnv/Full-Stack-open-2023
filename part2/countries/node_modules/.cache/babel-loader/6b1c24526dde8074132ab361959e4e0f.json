{"ast":null,"code":"var _jsxFileName = \"/Users/filonov/Projects/Full-Stack-open-2023/part2/countries/src/components/Country.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WEATHER_API_KEY = process.env.REACT_APP_API_KEY;\n\nconst Country = _ref => {\n  _s();\n\n  let {\n    country\n  } = _ref;\n  const [weather, setWeather] = useState(null);\n  const query = 'https://api.openweathermap.org/data/2.5/weather?q=' + country.capital + '&appid=' + WEATHER_API_KEY + '&units=metric';\n  useEffect(() => {\n    axios.get(query).then(response => {\n      console.log(response.data);\n      setWeather(response.data);\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: country.name.common\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capital: \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", country.population]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Languages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(country.languages).map(_ref2 => {\n        let [key, lng] = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: lng\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 72\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flag\",\n      children: country.flag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather in \", country.capital]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), weather ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weather.main.temp, \" C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pressure: \", weather.main.pressure, \" kPa\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", weather.wind.speed, \", direction \", weather.wind.deg]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Country, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["/Users/filonov/Projects/Full-Stack-open-2023/part2/countries/src/components/Country.js"],"names":["React","useState","useEffect","axios","WEATHER_API_KEY","process","env","REACT_APP_API_KEY","Country","country","weather","setWeather","query","capital","get","then","response","console","log","data","catch","error","name","common","population","Object","entries","languages","map","key","lng","flag","main","temp","pressure","wind","speed","deg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAApC;;AAEA,MAAMC,OAAO,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMW,KAAK,GAAG,uDAAuDH,OAAO,CAACI,OAA/D,GACR,SADQ,GACIT,eADJ,GACsB,eADpC;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAW,GADL,CACSF,KADT,EAEKG,IAFL,CAEUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAR,MAAAA,UAAU,CAACK,QAAQ,CAACG,IAAV,CAAV;AACH,KALL,EAMKC,KANL,CAMYC,KAAD,IAAWJ,OAAO,CAACI,KAAR,CAAcA,KAAd,CANtB;AAOH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA,gBAAKZ,OAAO,CAACa,IAAR,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BAAad,OAAO,CAACI,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iCAAgBJ,OAAO,CAACe,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBACKC,MAAM,CAACC,OAAP,CAAejB,OAAO,CAACkB,SAAvB,EAAkCC,GAAlC,CAAsC;AAAA,YAAC,CAACC,GAAD,EAAMC,GAAN,CAAD;AAAA,4BAAgB;AAAA,oBAAeA;AAAf,WAASD,GAAT;AAAA;AAAA;AAAA;AAAA,gBAAhB;AAAA,OAAtC;AADL;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAAuBpB,OAAO,CAACsB;AAA/B;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,gCAAgBtB,OAAO,CAACI,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAUKH,OAAO,gBACJ;AAAA,8BACI;AAAA,oCAAiBA,OAAO,CAACsB,IAAR,CAAaC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,iCAAcvB,OAAO,CAACsB,IAAR,CAAaE,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,6BAAUxB,OAAO,CAACyB,IAAR,CAAaC,KAAvB,kBAA0C1B,OAAO,CAACyB,IAAR,CAAaE,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADI,gBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAnCD;;GAAM7B,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../App.css\";\n\nconst WEATHER_API_KEY = process.env.REACT_APP_API_KEY;\n\nconst Country = ({ country }) => {\n    const [weather, setWeather] = useState(null);\n    const query = 'https://api.openweathermap.org/data/2.5/weather?q=' + country.capital\n        + '&appid=' + WEATHER_API_KEY + '&units=metric';\n\n    useEffect(() => {\n        axios\n            .get(query)\n            .then(response => {\n                console.log(response.data);\n                setWeather(response.data);\n            })\n            .catch((error) => console.error(error));\n    }, []);\n\n    return (\n        <div>\n            <h1>{country.name.common}</h1>\n            <p>Capital: {country.capital}</p>\n            <p>Population: {country.population}</p>\n            <h2>Languages</h2>\n            <ul>\n                {Object.entries(country.languages).map(([key, lng]) => <li key={key}>{lng}</li>)}\n            </ul>\n            <div className=\"flag\">{country.flag}</div>\n            <h2>Weather in {country.capital}</h2>\n            {weather ?\n                <>\n                    <p>Temperature: {weather.main.temp} C</p>\n                    <p>Pressure: {weather.main.pressure} kPa</p>\n                    <p>Wind: {weather.wind.speed}, direction {weather.wind.deg}</p>\n                </> : <p>Loading...</p>}\n\n        </div>\n    );\n};\n\nexport default Country;"]},"metadata":{},"sourceType":"module"}